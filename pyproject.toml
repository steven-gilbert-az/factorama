[build-system]
requires = [
    "scikit-build-core>=0.10",  # recent version for better Windows support
    "pybind11[global]>=2.11",   # includes base pybind11 + mkdoc tools
    "setuptools",               # needed for metadata
    "wheel"
]
build-backend = "scikit_build_core.build"

[project]
name = "factorama"
version = "1.0.0"
description = "Factor graph optimization library with Python bindings"
authors = [{ name = "Steven Gilbert" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.15.0"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.scikit-build]
cmake.build-type = "Release"
cmake.args = [
    "-DBUILD_PYTHON_BINDINGS=ON",
    "-DBUILD_TESTS=OFF"
]

# tells scikit-build where your Python package source lives
wheel.packages = ["python_bindings/python/factorama"]

[tool.cibuildwheel]
# Build CPython 3.8â€“3.12, skip 32-bit Windows and old Linux i686
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]
skip = ["*-win32", "*-manylinux_i686"]

# Use Python's modern build frontend explicitly
build-frontend = "build"

[tool.cibuildwheel.linux]
# NOTE: CMakeLists.txt already handles Eigen via FetchContent - this could potentially be removed
before-all = """
curl -L https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz | tar xz
cd eigen-3.4.0 && mkdir build && cd build
cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local
make install

# Install doxygen for documentation extraction
# Try package manager first, fall back to direct RPM if repos are broken
yum install -y doxygen || (curl -L http://vault.centos.org/7.9.2009/os/x86_64/Packages/doxygen-1.8.5-4.el7.x86_64.rpm -o doxygen.rpm && rpm -i doxygen.rpm)

# Install pybind11-mkdoc globally so it's available during CMake
python3 -m pip install --break-system-packages "pybind11[global]" || pip3 install "pybind11[global]"
"""