<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classfactorama_1_1PoseOrientationBetweenFactor" kind="class" language="C++" prot="public">
    <compoundname>factorama::PoseOrientationBetweenFactor</compoundname>
    <basecompoundref refid="classfactorama_1_1Factor" prot="public" virt="non-virtual">factorama::Factor</basecompoundref>
    <includes refid="pose__between__factors_8hpp" local="no">pose_between_factors.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfactorama_1_1PoseOrientationBetweenFactor_1aba9841a031ca03eef58ce3a3302a4daf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int factorama::PoseOrientationBetweenFactor::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="220" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1PoseOrientationBetweenFactor_1af2d3111c3ed2d606f211c2a40393217b" prot="private" static="no" mutable="no">
        <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
        <definition>PoseVariable* factorama::PoseOrientationBetweenFactor::pose1_</definition>
        <argsstring></argsstring>
        <name>pose1_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="221" column="22" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1PoseOrientationBetweenFactor_1a4c986922d913538db3cbe0b7787a047a" prot="private" static="no" mutable="no">
        <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
        <definition>PoseVariable* factorama::PoseOrientationBetweenFactor::pose2_</definition>
        <argsstring></argsstring>
        <name>pose2_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="222" column="22" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1PoseOrientationBetweenFactor_1a26dcf12367802c4ea9568b8e20d2fbcc" prot="private" static="no" mutable="no">
        <type><ref refid="classfactorama_1_1RotationVariable" kindref="compound">RotationVariable</ref> *</type>
        <definition>RotationVariable* factorama::PoseOrientationBetweenFactor::calibration_rotation_12_</definition>
        <argsstring></argsstring>
        <name>calibration_rotation_12_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="223" column="26" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1PoseOrientationBetweenFactor_1aea8e3de166f31e4648c85ca03c3f76f2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double factorama::PoseOrientationBetweenFactor::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="224" column="16" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1a25cc733a7826f02ff81552e2164845dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>factorama::PoseOrientationBetweenFactor::PoseOrientationBetweenFactor</definition>
        <argsstring>(int id, PoseVariable *pose1, PoseVariable *pose2, RotationVariable *calibration_rotation_12, double angle_sigma=1.0)</argsstring>
        <name>PoseOrientationBetweenFactor</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
          <declname>pose1</declname>
        </param>
        <param>
          <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
          <declname>pose2</declname>
        </param>
        <param>
          <type><ref refid="classfactorama_1_1RotationVariable" kindref="compound">RotationVariable</ref> *</type>
          <declname>calibration_rotation_12</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle_sigma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Construct orientation between factor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique factor identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose1</parametername>
</parameternamelist>
<parameterdescription>
<para>First pose variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second pose variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calibration_rotation_12</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation variable representing relative rotation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle_sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Represents the standard deviation to apply to the strength of the rotational constraint (radians) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="154" column="9" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="154" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1a037a3876c30a2a5da65d58ab30004333" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int factorama::PoseOrientationBetweenFactor::id</definition>
        <argsstring>() const override</argsstring>
        <name>id</name>
        <reimplements refid="classfactorama_1_1Factor_1a15ee6cb1a6d98a06e51aff237cc47d74">id</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="172" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1af3dd243b65d56b6be2ed7d391162f08b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int factorama::PoseOrientationBetweenFactor::residual_size</definition>
        <argsstring>() const override</argsstring>
        <name>residual_size</name>
        <reimplements refid="classfactorama_1_1Factor_1a40c4509c62aca417ba0fa05c6e74673f">residual_size</reimplements>
        <briefdescription>
<para>Get the dimension of this factor&apos;s residual vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of residual elements this factor contributes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="178" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1a2445dffa4f7bbdaafc032965672b810a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd factorama::PoseOrientationBetweenFactor::compute_residual</definition>
        <argsstring>() const override</argsstring>
        <name>compute_residual</name>
        <reimplements refid="classfactorama_1_1Factor_1a5766b6f5e3b08882d6a07b971a9b2412">compute_residual</reimplements>
        <briefdescription>
<para>Compute the residual vector for current variable values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Residual vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="181" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1a29e95d7c10634b7e1a1bf73e470242ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd factorama::PoseOrientationBetweenFactor::compute_residual</definition>
        <argsstring>(PoseVariable *pose1, PoseVariable *pose2, RotationVariable *calibration_rotation_12) const</argsstring>
        <name>compute_residual</name>
        <param>
          <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
          <declname>pose1</declname>
        </param>
        <param>
          <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
          <declname>pose2</declname>
        </param>
        <param>
          <type><ref refid="classfactorama_1_1RotationVariable" kindref="compound">RotationVariable</ref> *</type>
          <declname>calibration_rotation_12</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="186" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="186" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1a3893ce4a168c83f57f22ee734ca354fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void factorama::PoseOrientationBetweenFactor::compute_jacobians</definition>
        <argsstring>(std::vector&lt; Eigen::MatrixXd &gt; &amp;jacobians) const override</argsstring>
        <name>compute_jacobians</name>
        <reimplements refid="classfactorama_1_1Factor_1a8e40b08481ac787f1dde9055be58aa8a">compute_jacobians</reimplements>
        <param>
          <type>std::vector&lt; Eigen::MatrixXd &gt; &amp;</type>
          <declname>jacobians</declname>
        </param>
        <briefdescription>
<para>Compute jacobians with respect to connected variables. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jacobians</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector of jacobian matrices (one per variable). Empty (0x0) matrices indicate constant variables by convention. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="203" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.cpp" bodystart="6" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1ab69c59e55a27a08de605f33d130e1374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="classfactorama_1_1Variable" kindref="compound">Variable</ref> * &gt;</type>
        <definition>std::vector&lt;Variable *&gt; factorama::PoseOrientationBetweenFactor::variables</definition>
        <argsstring>() override</argsstring>
        <name>variables</name>
        <reimplements refid="classfactorama_1_1Factor_1af6abd4333b0fae4b2b04780ef40dc357">variables</reimplements>
        <briefdescription>
<para>Get pointers to all variables this factor depends on. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of variable pointers in jacobian order </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="205" column="21" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1a7d640a73cdf2ff7a593ed927fe8bfc16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double factorama::PoseOrientationBetweenFactor::weight</definition>
        <argsstring>() const override</argsstring>
        <name>weight</name>
        <reimplements refid="classfactorama_1_1Factor_1a1de23a9f9d43547ef32b54099b29c803">weight</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="210" column="16" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1ad3231ee19b0dca54870b111050b2f912" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string factorama::PoseOrientationBetweenFactor::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classfactorama_1_1Factor_1a942879f9728775ebf4e115003c593ec2">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="212" column="21" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseOrientationBetweenFactor_1a9a10bab2c444c33ad266c6507a2ed509" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>FactorType::FactorTypeEnum</type>
        <definition>FactorType::FactorTypeEnum factorama::PoseOrientationBetweenFactor::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classfactorama_1_1Factor_1a18b392f445631b479dcdd6159f8e4d22">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="214" column="36" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="214" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Orientation-only relative constraint between pose variables. </para>
    </briefdescription>
    <detaileddescription>
<para>Constrains the rotation difference between two poses to match a calibration rotation variable. Only affects the rotation components of poses, ignoring translation. Commonly used for camera-IMU calibration where relative orientation is known or estimated.</para>
<para><programlisting><codeline><highlight class="normal">auto<sp/>orientation_constraint<sp/>=<sp/>std::make_shared&lt;PoseOrientationBetweenFactor&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>factor_id++,<sp/>pose1,<sp/>pose2,<sp/>calibration_rotation,<sp/>angle_sigma);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>factorama::PoseOrientationBetweenFactor</label>
        <link refid="classfactorama_1_1PoseOrientationBetweenFactor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>factorama::Factor</label>
        <link refid="classfactorama_1_1Factor"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>factorama::PoseOrientationBetweenFactor</label>
        <link refid="classfactorama_1_1PoseOrientationBetweenFactor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>factorama::Factor</label>
        <link refid="classfactorama_1_1Factor"/>
      </node>
    </collaborationgraph>
    <location file="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" line="143" column="5" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_between_factors.hpp" bodystart="144" bodyend="225"/>
    <listofallmembers>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a26dcf12367802c4ea9568b8e20d2fbcc" prot="private" virt="non-virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>calibration_rotation_12_</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a3893ce4a168c83f57f22ee734ca354fc" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>compute_jacobians</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a2445dffa4f7bbdaafc032965672b810a" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>compute_residual</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a29e95d7c10634b7e1a1bf73e470242ab" prot="public" virt="non-virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>compute_residual</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a037a3876c30a2a5da65d58ab30004333" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>id</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1aba9841a031ca03eef58ce3a3302a4daf" prot="private" virt="non-virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>id_</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1ad3231ee19b0dca54870b111050b2f912" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>name</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1af2d3111c3ed2d606f211c2a40393217b" prot="private" virt="non-virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>pose1_</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a4c986922d913538db3cbe0b7787a047a" prot="private" virt="non-virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>pose2_</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a25cc733a7826f02ff81552e2164845dc" prot="public" virt="non-virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>PoseOrientationBetweenFactor</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1af3dd243b65d56b6be2ed7d391162f08b" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>residual_size</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a9a10bab2c444c33ad266c6507a2ed509" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>type</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1ab69c59e55a27a08de605f33d130e1374" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>variables</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1a7d640a73cdf2ff7a593ed927fe8bfc16" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>weight</name></member>
      <member refid="classfactorama_1_1PoseOrientationBetweenFactor_1aea8e3de166f31e4648c85ca03c3f76f2" prot="private" virt="non-virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>weight_</name></member>
      <member refid="classfactorama_1_1Factor_1a0d5f10ab19ffd64c16d1e4399683d229" prot="public" virt="virtual"><scope>factorama::PoseOrientationBetweenFactor</scope><name>~Factor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
