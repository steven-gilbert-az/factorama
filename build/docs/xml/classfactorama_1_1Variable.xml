<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classfactorama_1_1Variable" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>factorama::Variable</compoundname>
    <derivedcompoundref refid="classfactorama_1_1GenericVariable" prot="public" virt="non-virtual">factorama::GenericVariable</derivedcompoundref>
    <derivedcompoundref refid="classfactorama_1_1InverseRangeVariable" prot="public" virt="non-virtual">factorama::InverseRangeVariable</derivedcompoundref>
    <derivedcompoundref refid="classfactorama_1_1LandmarkVariable" prot="public" virt="non-virtual">factorama::LandmarkVariable</derivedcompoundref>
    <derivedcompoundref refid="classfactorama_1_1PoseVariable" prot="public" virt="non-virtual">factorama::PoseVariable</derivedcompoundref>
    <derivedcompoundref refid="classfactorama_1_1RotationVariable" prot="public" virt="non-virtual">factorama::RotationVariable</derivedcompoundref>
    <includes refid="types_8hpp" local="no">types.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfactorama_1_1Variable_1a9cb114fda9cfde5f5c7f18b605ac1f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual factorama::Variable::~Variable</definition>
        <argsstring>()=default</argsstring>
        <name>~Variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="108" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a9cd7ea51b78756d07ef25d2c11995013" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int factorama::Variable::id</definition>
        <argsstring>() const =0</argsstring>
        <name>id</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1ad18a20ce66a80d15adab77cd6423409c">id</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1afd8b804b7f605ff19a42bcd594397aac">id</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1aa5d5ee45f6c2d06eb4544c87079e580c">id</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1aa36b27ebbe316c36f14d71a677277c07">id</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the unique identifier for this variable <simplesect kind="return"><para><ref refid="classfactorama_1_1Variable" kindref="compound">Variable</ref> ID used for indexing and identification </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="112" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a005902228611fa232af7111ff63f430c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int factorama::Variable::size</definition>
        <argsstring>() const =0</argsstring>
        <name>size</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1a43193367c34f61f010c95f788907e076">size</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1aca9d99933bf56054f8e7135436f12bc9">size</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1a87e68cab3d075f3cf7e1e84ddf2ec776">size</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1a5ba093bfc99ca7922601aafa9c3d9fdc">size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dimension of this variable <simplesect kind="return"><para>Dimension (e.g. 3 for rotations, 6 for poses) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="116" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a672c1578b06070f9ca09d8ab4296dcbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>virtual const Eigen::VectorXd&amp; factorama::Variable::value</definition>
        <argsstring>() const =0</argsstring>
        <name>value</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1a77ceebca91f29b3e005e6601b3af1b61">value</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1af448160851a5872f7f79c2762aaa539d">value</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1a9dce902f91cd81432abb31e5d94d1467">value</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1ad33b00dce3a00b5b7d81fd63905206bf">value</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the variable&apos;s current value as a vector <simplesect kind="return"><para>Current variable value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="120" column="39"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1acb8f048e444d8c9971ec38ed36fe810f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void factorama::Variable::set_value_from_vector</definition>
        <argsstring>(const Eigen::VectorXd &amp;x)=0</argsstring>
        <name>set_value_from_vector</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1af99b3f0bfe2a0c1bd69af228087e144e">set_value_from_vector</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1a9088ff210265d2efdc87dcb201389cb0">set_value_from_vector</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1ad2af4a33ef1a15584c664db1dc3c66ea">set_value_from_vector</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1a43cca1df59188d9583e0915f3f7ef584">set_value_from_vector</reimplementedby>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the variable from a new value vector <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>New value (used by optimizer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="124" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a131e1fa8a893b4fb88d4468186be576b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void factorama::Variable::apply_increment</definition>
        <argsstring>(const Eigen::VectorXd &amp;dx)=0</argsstring>
        <name>apply_increment</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1a4bc5af32782bf1f82a845a75da98036c">apply_increment</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1ad007ce8677612118d0b2a687fbb7d9a8">apply_increment</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1af9b67c17786bc816777e96b7bfdcac2f">apply_increment</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1adc2251efd6d15c849c18a4711b9b9253">apply_increment</reimplementedby>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>dx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply an increment to the current value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Increment to apply (used by optimization algorithms) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="128" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a731965d199987b363b709923ce981775" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>VariableType::VariableTypeEnum</type>
        <definition>virtual VariableType::VariableTypeEnum factorama::Variable::type</definition>
        <argsstring>() const =0</argsstring>
        <name>type</name>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1a2adcf4f49587bf7cc4f0250e1075cc27">type</reimplementedby>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1a4fccc50a78b36e0c4f72cc16bec63abc">type</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1abe5863e40efd696d7a989d01db9eec8a">type</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1a5218fb6fa887abfcee58e943b5fcf88a">type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the variable type enumeration <simplesect kind="return"><para>Type identifier for this variable class </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="132" column="48"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a3cf558931879db0ae920db384d84a912" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string factorama::Variable::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1aed48440981365ad359b62f45c04cf723">name</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1a42537af933493e42332cde5e3b9207ae">name</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1a46388642b5aea4ce0c6209ac64391627">name</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1ad08549860e67f19403d3700f30b8a301">name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable name for this variable <simplesect kind="return"><para>String description of this variable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="136" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a8b5b9746857ca2e90a8b0b2b08bd6e5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void factorama::Variable::print</definition>
        <argsstring>() const =0</argsstring>
        <name>print</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1a75ba72eb55e3baf4846e5d2fa14ca208">print</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1a4af1c5ebbb9fd1a916cd0e75535bb5e3">print</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1a20c3adb7a0f1ae61ff3209a63011e32e">print</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1a81dc1520b241438ef57aa375fd11ad31">print</reimplementedby>
        <briefdescription>
<para>Print variable information to stdout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="139" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1a0f666510d6716b87b8d37b05672dbcf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool factorama::Variable::is_constant</definition>
        <argsstring>() const =0</argsstring>
        <name>is_constant</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1aa5701735ad7c65c4357366d009bebd2d">is_constant</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1ab567ebfd2ed361fcdb5b2e42ce8eafea">is_constant</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1a9d20527666cc6e2f2cc481ad3e27950d">is_constant</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1ac3025dbbd7b32ab87cb28acffd322774">is_constant</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this variable is held constant during optimization <simplesect kind="return"><para>True if variable should not be optimized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="143" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1Variable_1affceff3238526e0ab3ca7ccddb0e6558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classfactorama_1_1Variable" kindref="compound">Variable</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;Variable&gt; factorama::Variable::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classfactorama_1_1GenericVariable_1a4ff27f7a00d147d7dd7f2de8d9ba5c83">clone</reimplementedby>
        <reimplementedby refid="classfactorama_1_1LandmarkVariable_1ae1e19d8786aeb20e10a7c9e4bcf299cf">clone</reimplementedby>
        <reimplementedby refid="classfactorama_1_1PoseVariable_1a3e3792d2092f61135945be51df4dc9f5">clone</reimplementedby>
        <reimplementedby refid="classfactorama_1_1RotationVariable_1a5ee9f85717209befa75a53e68ef35153">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a deep copy of this variable <simplesect kind="return"><para>Shared pointer to cloned variable (used for numerical Jacobians) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="147" column="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for all optimization variables in the factor graph</para>
<para>Variables represent the state being optimized (poses, landmarks, etc.) Each variable has a vector representation for efficient optimization. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>factorama::RotationVariable</label>
        <link refid="classfactorama_1_1RotationVariable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>factorama::LandmarkVariable</label>
        <link refid="classfactorama_1_1LandmarkVariable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>factorama::Variable</label>
        <link refid="classfactorama_1_1Variable"/>
      </node>
      <node id="4">
        <label>factorama::PoseVariable</label>
        <link refid="classfactorama_1_1PoseVariable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>factorama::GenericVariable</label>
        <link refid="classfactorama_1_1GenericVariable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>factorama::Variable</label>
        <link refid="classfactorama_1_1Variable"/>
      </node>
    </collaborationgraph>
    <location file="/home/sgilbert/repos/factorama/src/factorama/types.hpp" line="105" column="5" bodyfile="/home/sgilbert/repos/factorama/src/factorama/types.hpp" bodystart="106" bodyend="148"/>
    <listofallmembers>
      <member refid="classfactorama_1_1Variable_1a131e1fa8a893b4fb88d4468186be576b" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>apply_increment</name></member>
      <member refid="classfactorama_1_1Variable_1affceff3238526e0ab3ca7ccddb0e6558" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>clone</name></member>
      <member refid="classfactorama_1_1Variable_1a9cd7ea51b78756d07ef25d2c11995013" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>id</name></member>
      <member refid="classfactorama_1_1Variable_1a0f666510d6716b87b8d37b05672dbcf8" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>is_constant</name></member>
      <member refid="classfactorama_1_1Variable_1a3cf558931879db0ae920db384d84a912" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>name</name></member>
      <member refid="classfactorama_1_1Variable_1a8b5b9746857ca2e90a8b0b2b08bd6e5f" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>print</name></member>
      <member refid="classfactorama_1_1Variable_1acb8f048e444d8c9971ec38ed36fe810f" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>set_value_from_vector</name></member>
      <member refid="classfactorama_1_1Variable_1a005902228611fa232af7111ff63f430c" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>size</name></member>
      <member refid="classfactorama_1_1Variable_1a731965d199987b363b709923ce981775" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>type</name></member>
      <member refid="classfactorama_1_1Variable_1a672c1578b06070f9ca09d8ab4296dcbf" prot="public" virt="pure-virtual"><scope>factorama::Variable</scope><name>value</name></member>
      <member refid="classfactorama_1_1Variable_1a9cb114fda9cfde5f5c7f18b605ac1f4c" prot="public" virt="virtual"><scope>factorama::Variable</scope><name>~Variable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
