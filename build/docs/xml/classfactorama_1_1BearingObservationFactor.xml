<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classfactorama_1_1BearingObservationFactor" kind="class" language="C++" prot="public">
    <compoundname>factorama::BearingObservationFactor</compoundname>
    <basecompoundref refid="classfactorama_1_1Factor" prot="public" virt="non-virtual">factorama::Factor</basecompoundref>
    <includes refid="bearing__observation__factor_8hpp" local="no">bearing_observation_factor.hpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classfactorama_1_1BearingObservationFactor_1a72dbf7bcb6f02963e9867d3fa0a7ca63" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double factorama::BearingObservationFactor::MIN_DISTANCE_FROM_CAMERA</definition>
        <argsstring></argsstring>
        <name>MIN_DISTANCE_FROM_CAMERA</name>
        <initializer>= 1e-9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="26" column="33" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfactorama_1_1BearingObservationFactor_1ac0a8157a293b0a280e3ce2dd5089d731" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int factorama::BearingObservationFactor::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="99" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1BearingObservationFactor_1a745ab96cfa660c8965124fc9842a2906" prot="private" static="no" mutable="no">
        <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
        <definition>PoseVariable* factorama::BearingObservationFactor::pose_var_</definition>
        <argsstring></argsstring>
        <name>pose_var_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="100" column="22" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1BearingObservationFactor_1a8d815d82987a7950a9bf35f7f0d2a838" prot="private" static="no" mutable="no">
        <type><ref refid="classfactorama_1_1LandmarkVariable" kindref="compound">LandmarkVariable</ref> *</type>
        <definition>LandmarkVariable* factorama::BearingObservationFactor::landmark_var_</definition>
        <argsstring></argsstring>
        <name>landmark_var_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="101" column="26" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1BearingObservationFactor_1a4c07895959c815fc1dec5e67200fb964" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d factorama::BearingObservationFactor::bearing_C_obs_</definition>
        <argsstring></argsstring>
        <name>bearing_C_obs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="102" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1BearingObservationFactor_1a4e5bc42e7ca5ddc42cf98537d475f3a6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double factorama::BearingObservationFactor::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="103" column="16" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1a6ed7f1d3538c7a7d4f6850d8e6764445" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>factorama::BearingObservationFactor::BearingObservationFactor</definition>
        <argsstring>(int id, PoseVariable *pose_var, LandmarkVariable *landmark_var, const Eigen::Vector3d &amp;bearing_C_observed, double angle_sigma=1.0)</argsstring>
        <name>BearingObservationFactor</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classfactorama_1_1PoseVariable" kindref="compound">PoseVariable</ref> *</type>
          <declname>pose_var</declname>
        </param>
        <param>
          <type><ref refid="classfactorama_1_1LandmarkVariable" kindref="compound">LandmarkVariable</ref> *</type>
          <declname>landmark_var</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>bearing_C_observed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle_sigma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Construct bearing observation factor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique factor identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose_var</parametername>
</parameternamelist>
<parameterdescription>
<para>Camera pose variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>landmark_var</parametername>
</parameternamelist>
<parameterdescription>
<para>3D landmark variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bearing_C_observed</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit bearing vector in camera frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle_sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard deviation of angular measurement (radians) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="37" column="9" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="37" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1a1cc0313b68ede4a6009618f0e580ca4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int factorama::BearingObservationFactor::id</definition>
        <argsstring>() const override</argsstring>
        <name>id</name>
        <reimplements refid="classfactorama_1_1Factor_1a15ee6cb1a6d98a06e51aff237cc47d74">id</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="54" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1a47fd969dcbc0602ccede0e0ceb0ec19e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd factorama::BearingObservationFactor::compute_residual</definition>
        <argsstring>() const override</argsstring>
        <name>compute_residual</name>
        <reimplements refid="classfactorama_1_1Factor_1a5766b6f5e3b08882d6a07b971a9b2412">compute_residual</reimplements>
        <briefdescription>
<para>Compute the residual vector for current variable values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Residual vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="59" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1a0541688134bf2e7db9392cbd88231a11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int factorama::BearingObservationFactor::residual_size</definition>
        <argsstring>() const override</argsstring>
        <name>residual_size</name>
        <reimplements refid="classfactorama_1_1Factor_1a40c4509c62aca417ba0fa05c6e74673f">residual_size</reimplements>
        <briefdescription>
<para>Get the dimension of this factor&apos;s residual vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of residual elements this factor contributes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="71" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1a9cf2ad639b828042c16c129e3b8664fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string factorama::BearingObservationFactor::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classfactorama_1_1Factor_1a942879f9728775ebf4e115003c593ec2">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="76" column="21" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1a3c8ca5cf2656d735691447c60b338cde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void factorama::BearingObservationFactor::compute_jacobians</definition>
        <argsstring>(std::vector&lt; Eigen::MatrixXd &gt; &amp;jacobians_out) const override</argsstring>
        <name>compute_jacobians</name>
        <reimplements refid="classfactorama_1_1Factor_1a8e40b08481ac787f1dde9055be58aa8a">compute_jacobians</reimplements>
        <param>
          <type>std::vector&lt; Eigen::MatrixXd &gt; &amp;</type>
          <declname>jacobians</declname>
        </param>
        <briefdescription>
<para>Compute jacobians with respect to connected variables. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jacobians</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector of jacobian matrices (one per variable). Empty (0x0) matrices indicate constant variables by convention. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="81" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.cpp" bodystart="7" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1af86d7bddc339272461e244e0005bed80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="classfactorama_1_1Variable" kindref="compound">Variable</ref> * &gt;</type>
        <definition>std::vector&lt;Variable *&gt; factorama::BearingObservationFactor::variables</definition>
        <argsstring>() override</argsstring>
        <name>variables</name>
        <reimplements refid="classfactorama_1_1Factor_1af6abd4333b0fae4b2b04780ef40dc357">variables</reimplements>
        <briefdescription>
<para>Get pointers to all variables this factor depends on. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of variable pointers in jacobian order </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="83" column="21" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1a4d6d4ed5af44ab330347197841bc9ce7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double factorama::BearingObservationFactor::weight</definition>
        <argsstring>() const override</argsstring>
        <name>weight</name>
        <reimplements refid="classfactorama_1_1Factor_1a1de23a9f9d43547ef32b54099b29c803">weight</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="88" column="16" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1BearingObservationFactor_1af698d3d06add23ec48d8fa27920e5f7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>FactorType::FactorTypeEnum</type>
        <definition>FactorType::FactorTypeEnum factorama::BearingObservationFactor::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classfactorama_1_1Factor_1a18b392f445631b479dcdd6159f8e4d22">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="93" column="36" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="93" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bearing observation factor for camera measurements. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents directional measurements from cameras to 3D landmarks. The factor constrains the predicted bearing (from camera pose to landmark) to match the observed bearing direction in the camera frame.</para>
<para><programlisting><codeline><highlight class="normal">Eigen::Vector3d<sp/>bearing_vector(0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline><highlight class="normal">double<sp/>bearing_sigma<sp/>=<sp/>0.1;</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>bearing_factor<sp/>=<sp/>std::make_shared&lt;BearingObservationFactor&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>factor_id++,<sp/>camera_pose,<sp/>landmark,<sp/>bearing_vector,<sp/>bearing_sigma);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>factorama::Factor</label>
        <link refid="classfactorama_1_1Factor"/>
      </node>
      <node id="1">
        <label>factorama::BearingObservationFactor</label>
        <link refid="classfactorama_1_1BearingObservationFactor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>factorama::Factor</label>
        <link refid="classfactorama_1_1Factor"/>
      </node>
      <node id="1">
        <label>factorama::BearingObservationFactor</label>
        <link refid="classfactorama_1_1BearingObservationFactor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" line="24" column="5" bodyfile="/home/sgilbert/repos/factorama/src/factorama/bearing_observation_factor.hpp" bodystart="25" bodyend="104"/>
    <listofallmembers>
      <member refid="classfactorama_1_1BearingObservationFactor_1a4c07895959c815fc1dec5e67200fb964" prot="private" virt="non-virtual"><scope>factorama::BearingObservationFactor</scope><name>bearing_C_obs_</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a6ed7f1d3538c7a7d4f6850d8e6764445" prot="public" virt="non-virtual"><scope>factorama::BearingObservationFactor</scope><name>BearingObservationFactor</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a3c8ca5cf2656d735691447c60b338cde" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>compute_jacobians</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a47fd969dcbc0602ccede0e0ceb0ec19e" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>compute_residual</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a1cc0313b68ede4a6009618f0e580ca4f" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>id</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1ac0a8157a293b0a280e3ce2dd5089d731" prot="private" virt="non-virtual"><scope>factorama::BearingObservationFactor</scope><name>id_</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a8d815d82987a7950a9bf35f7f0d2a838" prot="private" virt="non-virtual"><scope>factorama::BearingObservationFactor</scope><name>landmark_var_</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a72dbf7bcb6f02963e9867d3fa0a7ca63" prot="private" virt="non-virtual"><scope>factorama::BearingObservationFactor</scope><name>MIN_DISTANCE_FROM_CAMERA</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a9cf2ad639b828042c16c129e3b8664fc" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>name</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a745ab96cfa660c8965124fc9842a2906" prot="private" virt="non-virtual"><scope>factorama::BearingObservationFactor</scope><name>pose_var_</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a0541688134bf2e7db9392cbd88231a11" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>residual_size</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1af698d3d06add23ec48d8fa27920e5f7c" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>type</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1af86d7bddc339272461e244e0005bed80" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>variables</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a4d6d4ed5af44ab330347197841bc9ce7" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>weight</name></member>
      <member refid="classfactorama_1_1BearingObservationFactor_1a4e5bc42e7ca5ddc42cf98537d475f3a6" prot="private" virt="non-virtual"><scope>factorama::BearingObservationFactor</scope><name>weight_</name></member>
      <member refid="classfactorama_1_1Factor_1a0d5f10ab19ffd64c16d1e4399683d229" prot="public" virt="virtual"><scope>factorama::BearingObservationFactor</scope><name>~Factor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
