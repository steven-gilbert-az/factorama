<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classfactorama_1_1PoseVariable" kind="class" language="C++" prot="public">
    <compoundname>factorama::PoseVariable</compoundname>
    <basecompoundref refid="classfactorama_1_1Variable" prot="public" virt="non-virtual">factorama::Variable</basecompoundref>
    <includes refid="pose__variable_8hpp" local="no">pose_variable.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfactorama_1_1PoseVariable_1a7ac0a274a682738dbf8040e14d031cd5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int factorama::PoseVariable::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="91" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1PoseVariable_1afe7a66f551797db75f7ce54153d9703f" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd factorama::PoseVariable::pose_CW_</definition>
        <argsstring></argsstring>
        <name>pose_CW_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="92" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfactorama_1_1PoseVariable_1a6cbd5ed4c76949e7bef4150757720a57" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool factorama::PoseVariable::is_constant_</definition>
        <argsstring></argsstring>
        <name>is_constant_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="93" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a26eabce7c6d28a8555c6582d68b23a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>factorama::PoseVariable::PoseVariable</definition>
        <argsstring>(int id, const Eigen::Matrix&lt; double, 6, 1 &gt; &amp;pose_CW_init)</argsstring>
        <name>PoseVariable</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const Eigen::Matrix&lt; double, 6, 1 &gt; &amp;</type>
          <declname>pose_CW_init</declname>
        </param>
        <briefdescription>
<para>Construct pose variable from 6-element vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique variable identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose_CW_init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial pose as [tx, ty, tz, rx, ry, rz] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="31" column="9" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="8" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a9833e5b41e985d1e9e52af514ace97c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>factorama::PoseVariable::PoseVariable</definition>
        <argsstring>(int id, const Eigen::Vector3d pos_W, const Eigen::Matrix3d dcm_CW)</argsstring>
        <name>PoseVariable</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d</type>
          <declname>pos_W</declname>
        </param>
        <param>
          <type>const Eigen::Matrix3d</type>
          <declname>dcm_CW</declname>
        </param>
        <briefdescription>
<para>Construct pose variable from position and DCM (rotation matrix) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique variable identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos_W</parametername>
</parameternamelist>
<parameterdescription>
<para>Camera position in world frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dcm_CW</parametername>
</parameternamelist>
<parameterdescription>
<para>DCM (rotation matrix) from world to camera frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="39" column="9" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="11" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1aa5d5ee45f6c2d06eb4544c87079e580c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int factorama::PoseVariable::id</definition>
        <argsstring>() const override</argsstring>
        <name>id</name>
        <reimplements refid="classfactorama_1_1Variable_1a9cd7ea51b78756d07ef25d2c11995013">id</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the unique identifier for this variable <simplesect kind="return"><para><ref refid="classfactorama_1_1Variable" kindref="compound">Variable</ref> ID used for indexing and identification </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="41" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a87e68cab3d075f3cf7e1e84ddf2ec776" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int factorama::PoseVariable::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classfactorama_1_1Variable_1a005902228611fa232af7111ff63f430c">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dimension of this variable <simplesect kind="return"><para>Dimension (e.g. 3 for rotations, 6 for poses) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="42" column="13" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a9dce902f91cd81432abb31e5d94d1467" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd&amp; factorama::PoseVariable::value</definition>
        <argsstring>() const override</argsstring>
        <name>value</name>
        <reimplements refid="classfactorama_1_1Variable_1a672c1578b06070f9ca09d8ab4296dcbf">value</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the variable&apos;s current value as a vector <simplesect kind="return"><para>Current variable value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="43" column="31" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a5218fb6fa887abfcee58e943b5fcf88a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>VariableType::VariableTypeEnum</type>
        <definition>VariableType::VariableTypeEnum factorama::PoseVariable::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classfactorama_1_1Variable_1a731965d199987b363b709923ce981775">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the variable type enumeration <simplesect kind="return"><para>Type identifier for this variable class </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="44" column="40" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a9d20527666cc6e2f2cc481ad3e27950d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool factorama::PoseVariable::is_constant</definition>
        <argsstring>() const override</argsstring>
        <name>is_constant</name>
        <reimplements refid="classfactorama_1_1Variable_1a0f666510d6716b87b8d37b05672dbcf8">is_constant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this variable is held constant during optimization <simplesect kind="return"><para>True if variable should not be optimized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="45" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1add3d17f211495e53d21bc27da0a9228e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void factorama::PoseVariable::set_is_constant</definition>
        <argsstring>(bool val)</argsstring>
        <name>set_is_constant</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="46" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1ad9c683be25b08c0e4059367495b7da50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d factorama::PoseVariable::pos_W</definition>
        <argsstring>() const</argsstring>
        <name>pos_W</name>
        <briefdescription>
<para>Get camera position in world frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>3D position vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="52" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1ab5399256d33b1070f4bab2f85751c9e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d factorama::PoseVariable::rot_CW</definition>
        <argsstring>() const</argsstring>
        <name>rot_CW</name>
        <briefdescription>
<para>Get rotation rodrigues vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>3D rodrigues vector (axis * angle) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="58" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1ad2af4a33ef1a15584c664db1dc3c66ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void factorama::PoseVariable::set_value_from_vector</definition>
        <argsstring>(const Eigen::VectorXd &amp;x) override</argsstring>
        <name>set_value_from_vector</name>
        <reimplements refid="classfactorama_1_1Variable_1acb8f048e444d8c9971ec38ed36fe810f">set_value_from_vector</reimplements>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the variable from a new value vector <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>New value (used by optimizer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="60" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1af9b67c17786bc816777e96b7bfdcac2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void factorama::PoseVariable::apply_increment</definition>
        <argsstring>(const Eigen::VectorXd &amp;dx) override</argsstring>
        <name>apply_increment</name>
        <reimplements refid="classfactorama_1_1Variable_1a131e1fa8a893b4fb88d4468186be576b">apply_increment</reimplements>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>dx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply an increment to the current value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Increment to apply (used by optimization algorithms) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="61" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="26" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a46388642b5aea4ce0c6209ac64391627" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string factorama::PoseVariable::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classfactorama_1_1Variable_1a3cf558931879db0ae920db384d84a912">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable name for this variable <simplesect kind="return"><para>String description of this variable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="62" column="21" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1af665dda39a73bb4026939b7b77f7368e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d factorama::PoseVariable::dcm_CW</definition>
        <argsstring>() const</argsstring>
        <name>dcm_CW</name>
        <briefdescription>
<para>Get DCM (rotation matrix) from rodrigues vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>3x3 rotation matrix from world to camera frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="68" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="57" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1af65d53179b17511c749c88ba93fed04d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void factorama::PoseVariable::set_pose_vector</definition>
        <argsstring>(Eigen::Matrix&lt; double, 6, 1 &gt; pose)</argsstring>
        <name>set_pose_vector</name>
        <param>
          <type>Eigen::Matrix&lt; double, 6, 1 &gt;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
<para>Set pose from 6-element vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pose</parametername>
</parameternamelist>
<parameterdescription>
<para>New pose as [tx, ty, tz, rx, ry, rz] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="74" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1aba4377b13ac42db4b08c39dabcb3ac0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void factorama::PoseVariable::set_pos_W</definition>
        <argsstring>(const Eigen::Vector3d &amp;pos_W)</argsstring>
        <name>set_pos_W</name>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>pos_W</declname>
        </param>
        <briefdescription>
<para>Set camera position in world frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos_W</parametername>
</parameternamelist>
<parameterdescription>
<para>New 3D position vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="80" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a7cf0d697893b3b27d54205037a3fb771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void factorama::PoseVariable::set_dcm_CW</definition>
        <argsstring>(const Eigen::Matrix3d &amp;dcm_CW)</argsstring>
        <name>set_dcm_CW</name>
        <param>
          <type>const Eigen::Matrix3d &amp;</type>
          <declname>dcm_CW</declname>
        </param>
        <briefdescription>
<para>Set rotation from DCM (rotation matrix) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dcm_CW</parametername>
</parameternamelist>
<parameterdescription>
<para>New rotation matrix from world to camera frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="86" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a20c3adb7a0f1ae61ff3209a63011e32e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void factorama::PoseVariable::print</definition>
        <argsstring>() const override</argsstring>
        <name>print</name>
        <reimplements refid="classfactorama_1_1Variable_1a8b5b9746857ca2e90a8b0b2b08bd6e5f">print</reimplements>
        <briefdescription>
<para>Print variable information to stdout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="87" column="14" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classfactorama_1_1PoseVariable_1a3e3792d2092f61135945be51df4dc9f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classfactorama_1_1Variable" kindref="compound">Variable</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Variable &gt; factorama::PoseVariable::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classfactorama_1_1Variable_1affceff3238526e0ab3ca7ccddb0e6558">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a deep copy of this variable <simplesect kind="return"><para>Shared pointer to cloned variable (used for numerical Jacobians) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="88" column="25" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>6-DOF camera pose variable with SE(3) parameterization </para>
    </briefdescription>
    <detaileddescription>
<para>Represents camera poses as 6-element vectors: [tx, ty, tz, rx, ry, rz] where translation is in world frame and rotation uses rodrigues vector (axis * angle) representation. The pose transforms points from world to camera frame.</para>
<para><programlisting><codeline><highlight class="normal">Eigen::Matrix&lt;double,<sp/>6,<sp/>1&gt;<sp/>pose_vec<sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>6,<sp/>1&gt;::Zero();</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>camera_pose<sp/>=<sp/>std::make_shared&lt;PoseVariable&gt;(1,<sp/>pose_vec);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>factorama::Variable</label>
        <link refid="classfactorama_1_1Variable"/>
      </node>
      <node id="1">
        <label>factorama::PoseVariable</label>
        <link refid="classfactorama_1_1PoseVariable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>factorama::Variable</label>
        <link refid="classfactorama_1_1Variable"/>
      </node>
      <node id="1">
        <label>factorama::PoseVariable</label>
        <link refid="classfactorama_1_1PoseVariable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" line="23" column="5" bodyfile="/home/sgilbert/repos/factorama/src/factorama/pose_variable.hpp" bodystart="24" bodyend="94"/>
    <listofallmembers>
      <member refid="classfactorama_1_1PoseVariable_1af9b67c17786bc816777e96b7bfdcac2f" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>apply_increment</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a3e3792d2092f61135945be51df4dc9f5" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>clone</name></member>
      <member refid="classfactorama_1_1PoseVariable_1af665dda39a73bb4026939b7b77f7368e" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>dcm_CW</name></member>
      <member refid="classfactorama_1_1PoseVariable_1aa5d5ee45f6c2d06eb4544c87079e580c" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>id</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a7ac0a274a682738dbf8040e14d031cd5" prot="private" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>id_</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a9d20527666cc6e2f2cc481ad3e27950d" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>is_constant</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a6cbd5ed4c76949e7bef4150757720a57" prot="private" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>is_constant_</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a46388642b5aea4ce0c6209ac64391627" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>name</name></member>
      <member refid="classfactorama_1_1PoseVariable_1ad9c683be25b08c0e4059367495b7da50" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>pos_W</name></member>
      <member refid="classfactorama_1_1PoseVariable_1afe7a66f551797db75f7ce54153d9703f" prot="private" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>pose_CW_</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a26eabce7c6d28a8555c6582d68b23a40" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>PoseVariable</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a9833e5b41e985d1e9e52af514ace97c0" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>PoseVariable</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a20c3adb7a0f1ae61ff3209a63011e32e" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>print</name></member>
      <member refid="classfactorama_1_1PoseVariable_1ab5399256d33b1070f4bab2f85751c9e0" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>rot_CW</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a7cf0d697893b3b27d54205037a3fb771" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>set_dcm_CW</name></member>
      <member refid="classfactorama_1_1PoseVariable_1add3d17f211495e53d21bc27da0a9228e" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>set_is_constant</name></member>
      <member refid="classfactorama_1_1PoseVariable_1aba4377b13ac42db4b08c39dabcb3ac0d" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>set_pos_W</name></member>
      <member refid="classfactorama_1_1PoseVariable_1af65d53179b17511c749c88ba93fed04d" prot="public" virt="non-virtual"><scope>factorama::PoseVariable</scope><name>set_pose_vector</name></member>
      <member refid="classfactorama_1_1PoseVariable_1ad2af4a33ef1a15584c664db1dc3c66ea" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>set_value_from_vector</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a87e68cab3d075f3cf7e1e84ddf2ec776" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>size</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a5218fb6fa887abfcee58e943b5fcf88a" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>type</name></member>
      <member refid="classfactorama_1_1PoseVariable_1a9dce902f91cd81432abb31e5d94d1467" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>value</name></member>
      <member refid="classfactorama_1_1Variable_1a9cb114fda9cfde5f5c7f18b605ac1f4c" prot="public" virt="virtual"><scope>factorama::PoseVariable</scope><name>~Variable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
